name: CMake on unix platforms

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        compiler:
          - gcc-13
          - llvm-18
        ci_preset_suffix: [ubuntu-debug-sanitize-thread, ubuntu-debug-sanitize-alub, ubuntu-release]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++

    steps:
    - uses: actions/checkout@v4
    
    - name: Cache
      uses: actions/cache@v3
      with:
        path: |
          ./build/
          ~/vcpkg
          ~/.cache/vcpkg/archives
          ~/.conan2/
          ${{ env.LOCALAPPDATA }}/vcpkg/archives
          ${{ env.APPDATA }}/vcpkg/archives
          ${{ env.XDG_CACHE_HOME }}/vcpkg/archives
          ~/.cache/ccache
          ~/.ccache
          ~/.config/ccache
          ~/Library/Caches/ccache
          ${{ env.LOCALAPPDATA }}/ccache
          ${{ env.XDG_CACHE_HOME }}/ccache
        key: ${{ runner.os }}-${{ matrix.compiler }}-${{ env.BUILD_TYPE }}-${{ hashFiles('**/CMakeLists.txt', './vcpkg.json') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.BUILD_TYPE }}-

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        version: "latest"
    - run: uv sync --frozen --no-install-project

    - name: Setup Cpp
      uses: aminya/setup-cpp@v1
      with:
        compiler: ${{ matrix.compiler }}
        cmake: true
        cppcheck: true
        ccache: true
        clang-tidy: 18

    - name: Configure CMake
      run: |
        source .venv/bin/activate
        cmake --preset ci-${{ matrix.ci_preset_suffix }} -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}

    - name: Build
      run: cmake --build --preset ci-${{ matrix.ci_preset_suffix }}

    - name: Test
      run: ctest --preset ci-${{ matrix.ci_preset_suffix }}
